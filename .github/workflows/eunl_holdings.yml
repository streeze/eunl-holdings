name: EUNL Yearly Holdings

"on":
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Python 3.8 (legacy wheels)
        uses: actions/setup-python@v5
        with:
          python-version: "3.8"

      - name: Upgrade pip & core build tools
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade wheel "setuptools<81"

      - name: Install system deps (lxml)
        run: |
          sudo apt-get update
          sudo apt-get install -y libxml2-dev libxslt1-dev zlib1g-dev

      - name: Clone talsan/ishares (scraper)
        run: git clone --depth 1 https://github.com/talsan/ishares.git vendor/ishares

      - name: Install ishares requirements (pinned, legacy)
        run: |
          pip install -r vendor/ishares/requirements.txt

      - name: Install extra Python deps (runtime needs)
        run: |
          pip install \
            pandas pyarrow requests python-dateutil beautifulsoup4 html5lib \
            scrapingbee cloudscraper pandas_market_calendars \
            backports.zoneinfo \
            openpyxl xlrd \
            "urllib3<2" "certifi<2021" "chardet<4" "idna<3"

      - name: Show environment (debug)
        run: |
          python -V
          pip --version
          pip list | sort | tee pip-freeze.txt
          echo "Workspace:"
          pwd && ls -la
          echo "ishares tree:"
          ls -la vendor/ishares || true
          ls -la vendor/ishares/ishares || true

      - name: Run downloader with retries
        id: download
        working-directory: vendor/ishares
        env:
          PYTHONPATH: .
          # Optional: falls vorhanden:
          # SCRAPINGBEE_API_KEY: ${{ secrets.SCRAPINGBEE_API_KEY }}
        run: |
          set -e
          tries=3
          for i in $(seq 1 $tries); do
            echo "Attempt $i/$tries"
            python -m ishares.sync_etf_downloader --outputpath ../../data/ishares SWDA --overwrite && break
            echo "Downloader failed (attempt $i). Sleeping 10s..."
            sleep 10
          done

      - name: List downloaded files (debug)
        run: |
          echo "Listing data/ishares..."
          find data/ishares -maxdepth 6 -type f | head -n 200 || true
          echo "Count of CSVs:"
          find data/ishares -name "asofdate=*.csv" | wc -l || true

      - name: Ensure script exists
        run: |
          test -f scripts/select_yearly_snapshots.py || (echo "scripts/select_yearly_snapshots.py fehlt!" && exit 1)

      - name: Select latest snapshot per year (>= 2010)
        run: |
          python scripts/select_yearly_snapshots.py \
            --root data/ishares \
            --etf SWDA \
            --from-year 2010 \
            --outdir exports/eunl_yearly

      - name: List exports (debug)
        run: |
          echo "Summary dir:"
          ls -la summary || true
          echo "Exports dir:"
          ls -la exports/eunl_yearly || true

      - name: Upload exports artifact (always try)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: eunl_yearly_exports
          path: |
            exports/eunl_yearly
            summary
            pip-freeze.txt
          if-no-files-found: warn

      - name: Commit & push results back to repo
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"
          git add exports/eunl_yearly summary/* || true
          if ! git diff --cached --quiet; then
            git commit -m "Update EUNL yearly holdings exports"
            git push
          else
            echo "No changes to commit"
          fi
