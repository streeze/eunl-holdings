name: EUNL Yearly Holdings

"on":
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Python 3.8
        uses: actions/setup-python@v5
        with:
          python-version: "3.8"

      - name: Upgrade pip & base tools
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade wheel "setuptools<81"

      - name: Install system packages for lxml build
        run: |
          sudo apt-get update
          sudo apt-get install -y libxml2-dev libxslt1-dev zlib1g-dev

      - name: Clone talsan/ishares (scraper)
        run: git clone --depth 1 https://github.com/talsan/ishares.git vendor/ishares

      - name: Install ishares requirements
        run: |
          pip install -r vendor/ishares/requirements.txt

      # ZusÃ¤tzliche Pakete, inkl. pandas_market_calendars
      - name: Install extra Python deps
        run: |
          pip install pandas pyarrow requests python-dateutil beautifulsoup4 html5lib
          pip install scrapingbee cloudscraper pandas_market_calendars

      - name: Show repo tree before download (debug)
        run: |
          pwd
          ls -la
          ls -la vendor/ishares || true
          ls -la vendor/ishares/ishares || true

      - name: Fetch full SWDA holdings history
        working-directory: vendor/ishares
        env:
          PYTHONPATH: .
          # Optional: falls du einen ScrapingBee-Key hast, kannst du den als Secret setzen
          # SCRAPINGBEE_API_KEY: ${{ secrets.SCRAPINGBEE_API_KEY }}
        run: |
          python -m ishares.sync_etf_downloader --outputpath ../../data/ishares SWDA --overwrite

      - name: List downloaded files (debug)
        run: |
          echo "Listing data/ishares..."
          find data/ishares -maxdepth 5 -type f | head -n 100 || true
          echo "Count of CSVs:"
          find data/ishares -name "asofdate=*.csv" | wc -l || true

      - name: Select latest snapshot per year (>= 2010)
        run: |
          python scripts/select_yearly_snapshots.py \
            --root data/ishares \
            --etf SWDA \
            --from-year 2010 \
            --outdir exports/eunl_yearly

      - name: List exports (debug)
        run: |
          echo "Summary file:"
          ls -la summary || true
          echo "Exports:"
          ls -la exports/eunl_yearly || true

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: eunl_yearly_exports
          path: exports/eunl_yearly
          if-no-files-found: warn

      - name: Commit & push results back to repo
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"
          git add exports/eunl_yearly summary/* || true
          if ! git diff --cached --quiet; then
            git commit -m "Update EUNL yearly holdings exports"
            git push
          else
            echo "No changes to commit"
          fi
